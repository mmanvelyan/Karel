CREATE SCHEMA Karel

CREATE TABLE IF NOT EXISTS Karel.USERS
(
    USER_ID   int NOT NULL GENERATED ALWAYS AS IDENTITY,
    USERNAME  varchar(255) UNIQUE NOT NULL,
    FIRSTNAME varchar(255),
    LASTNAME  varchar(255),
    EMAIL     varchar(255) UNIQUE NOT NULL,
    PHONE     varchar(255),
    PASSWORD  varchar(255)        NOT NULL,

    PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS Karel.PROBLEMS
(
    PROBLEM_ID  int UNIQUE NOT NULL,
    TITLE       varchar(255) UNIQUE NOT NULL,
    DESCRIPTION text                NOT NULL,

    PRIMARY KEY (PROBLEM_ID)
);

CREATE TABLE IF NOT EXISTS Karel.TESTS
(
    TEST_ID    int NOT NULL GENERATED ALWAYS AS IDENTITY,
    PROBLEM_ID int NOT NULL,
    INPUT      text,
    OUTPUT     text,

    PRIMARY KEY (TEST_ID),
    CONSTRAINT FK_TEST_PROBLEM
        FOREIGN KEY (PROBLEM_ID)
            REFERENCES PROBLEMS (PROBLEM_ID)
);

CREATE TABLE IF NOT EXISTS Karel.STATUSES
(
    STATUS_ID   int UNIQUE   NOT NULL,
    DESCRIPTION varchar(255) NOT NULL,

    PRIMARY KEY (STATUS_ID)
);

CREATE TABLE IF NOT EXISTS Karel.SUBMISSIONS
(
    SUBMISSION_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
    USER_ID       int NOT NULL,
    PROBLEM_ID    int NOT NULL,
    CODE          text,
    STATUS_ID     int NOT NULL,

    PRIMARY KEY (SUBMISSION_ID),
    CONSTRAINT FK_SUBMISSION_USER
        FOREIGN KEY (USER_ID)
            REFERENCES USERS (USER_ID),
    CONSTRAINT FK_SUBMISSION_PROBLEM
        FOREIGN KEY (PROBLEM_ID)
            REFERENCES PROBLEMS (PROBLEM_ID),
    CONSTRAINT FK_SUBMISSION_STATUS
        FOREIGN KEY (STATUS_ID)
            REFERENCES STATUSES (STATUS_ID)
);